language: bash
sudo: required
env:
  matrix:
  - DEPLOY_ENVIRONMENT=staging DEPLOY_BRANCH=master DEPLOY_REPO=Beit-Hatfutsot/mojp-k8s
services:
- docker
script:
- |
  if [ "${DEPLOY_ENVIRONMENT}" != "" ] && [ "${TRAVIS_PULL_REQUEST}" == "false" ] &&\
     [ "${TRAVIS_BRANCH}" == "${DEPLOY_BRANCH}" ] &&\
     [ "${TRAVIS_COMMIT_MESSAGE}" != "" ] && ! echo "${TRAVIS_COMMIT_MESSAGE}" | grep -- --no-deploy && [ "${TRAVIS_COMMIT}" != "" ]
  then
      openssl aes-256-cbc -K $encrypted_debe730ce1aa_key -iv $encrypted_debe730ce1aa_iv -in k8s-ops-secret.json.enc -out secret-k8s-ops.json -d
      K8S_ENVIRONMENT_NAME="${DEPLOY_ENVIRONMENT}"
      IMAGE_TAG="gcr.io/bh-org-01/mojp-dbs-pipelines:${TRAVIS_COMMIT}"
      B64_UPDATE_VALUES=`echo '{"mojp-dbs-pipelines":{"image":"'${IMAGE_TAG}'"}}' | base64 -w0`
      wget https://raw.githubusercontent.com/Beit-Hatfutsot/mojp-k8s/master/run_docker_ops.sh
      chmod +x run_docker_ops.sh
      ./run_docker_ops.sh "${K8S_ENVIRONMENT_NAME}" "
           ! ./helm_update_values.sh '${B64_UPDATE_VALUES}' \
                                     '${K8S_ENVIRONMENT_NAME} mojp-dbs-pipelines image update --no-deploy' \
                                     '${K8S_OPS_GITHUB_REPO_TOKEN}' \
                                     '${DEPLOY_REPO}' \
                                     '${DEPLOY_BRANCH}' \
              && echo 'failed helm update values' && exit 1
           ! gcloud container builds submit --tag $IMAGE_TAG /app \
              && echo 'failed to build app image' && exit 1
           exit 0
      " \
      "orihoch/sk8s-ops@sha256:6c368f75207229c8bb2ccb99bd6414dfb21289c5c988d2381a9da2015f55bd38" \
      "${DEPLOY_REPO}" "${DEPLOY_BRANCH}" "" "-v `pwd`:/app"
  fi
